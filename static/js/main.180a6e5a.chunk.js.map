{"version":3,"sources":["component/Alert/index.tsx","component/DataTable/index.tsx","component/FixedButton/index.tsx","component/Modal/index.tsx","component/Navigation/index.tsx","component/PillCheckbox/index.tsx","component/FormDivider/index.tsx","utils/index.ts","App.tsx","serviceWorker.js","index.js"],"names":["Alert","props","variant","show","style","position","top","right","title","DataTable","Table","striped","bordered","hover","className","data","map","value","index","key","data-key","onClick","onRowClick","companyName","announcementTimestamp","sequence","languageScore","perfectLanguageScore","link","workingType","recruitType","districts","recruitLevel","rank","subjects","certificates","departments","String","ncs","isEither","reverse","FixedButton","useState","toastShow","setToastShow","width","height","bottom","backgroundColor","borderRadius","boxShadow","transition","textAlign","setTimeout","size","Modal","onHide","onHideButtonClick","animation","Header","closeButton","Title","Body","clickedIndex","Footer","Button","onRemoveButtonClick","Navigation","Navbar","bg","Brand","href","Nav","Link","onFormLinkClick","onDataLInkClick","onExportButtonClick","PillCheckbox","isChecked","setChecked","isFocused","setFocused","borderColor","Form","Check","name","type","label","checked","onChange","onBlur","onFocus","onKeyPress","event","FormDivider","fontSize","borderBottom","getGongdbInputData","document","querySelectorAll","forEach","element","attributes","getNamedItem","inputValue","Array","isArray","filter","each","join","App","gongdbInputData","setGongdbInputData","setClickedIndex","modalShow","setModalShow","isCertReadOnly","setIsCertReadOnly","isDepartmentReadOnly","setIsDepartmentReadOnly","mode","setMode","recruitTypeElement","useRef","useEffect","getElementsByName","object","encodeURIComponent","JSON","stringify","a","createElement","download","click","remove","exportJSON","Container","fluid","removeIndex","_","id","Row","Col","xs","Label","Control","autoComplete","ref","readOnly","tabIndex","undefined","placeholder","onDoubleClick","target","inline","display","currentTarget","block","current","focus","focusOnFirst","localStorage","setItem","length","paddingTop","slice","includes","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.180a6e5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert as BootstrapAlert } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  show: boolean\r\n  title: string\r\n  variant?: string\r\n}\r\n\r\nconst Alert = (props: Props) => {\r\n  return (\r\n    <BootstrapAlert\r\n      variant={props.variant ? props.variant : \"success\"}\r\n      show={props.show} \r\n      style={{position: \"fixed\", top: 15, right: 15}}\r\n    >\r\n      {props.title}\r\n    </BootstrapAlert>\r\n  );\r\n};\r\n\r\nexport default Alert;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  data: GongdbInputData[]\r\n  onRowClick: (index: number) => void\r\n}\r\n\r\nconst DataTable = (props: Props) => {\r\n  return (\r\n    <Table striped bordered hover className=\"mt-3\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>회사명</th>\r\n          <th>공고연도</th>\r\n          <th>차수</th>\r\n          <th>어학</th>\r\n          <th>어학만점</th>\r\n          <th>링크</th>\r\n          <th>직군</th>\r\n          <th>근무형태</th>\r\n          <th>채용구분</th>\r\n          <th>지역</th>\r\n          <th>채용수준</th>\r\n          <th>직급</th>\r\n          <th>과목</th>\r\n          <th>자격증</th>\r\n          <th>학과</th>\r\n          <th>NCS</th>\r\n          <th>둘중하나</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.data.map((value, index) => (\r\n            <tr \r\n              key={index} \r\n              data-key={index} \r\n              onClick={() => props.onRowClick(index)}\r\n            >\r\n              <td>{index+1}</td>\r\n              <td>{value.companyName}</td>\r\n              <td>{value.announcementTimestamp}</td>\r\n              <td>{value.sequence}</td>\r\n              <td>{value.languageScore}</td>\r\n              <td>{value.perfectLanguageScore}</td>\r\n              <td>{value.link}</td>\r\n              <td>{value.position}</td>\r\n              <td>{value.workingType}</td>\r\n              <td>{value.recruitType}</td>\r\n              <td>{value.districts}</td>\r\n              <td>{value.recruitLevel}</td>\r\n              <td>{value.rank}</td>\r\n              <td>{value.subjects}</td>\r\n              <td>{value.certificates}</td>\r\n              <td>{value.departments}</td>\r\n              <td>{String(value.ncs)}</td>\r\n              <td>{typeof value.isEither === \"boolean\" ? String(value.isEither) : \"\"}</td>\r\n            </tr>\r\n          )).reverse()\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default DataTable;","import React, { useState } from 'react';\r\nimport { IoMdCopy } from \"react-icons/io\";\r\nimport Alert from '../Alert';\r\n\r\ninterface Props {\r\n  onClick: () => void\r\n}\r\n\r\nconst FixedButton = (props: Props) => {\r\n  const [toastShow, setToastShow] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n    <Alert show={toastShow} title=\"가장 최근 행이 복사되었습니다!\" />\r\n      <div \r\n        style={{\r\n          position: \"fixed\", \r\n          width: 50, \r\n          height: 50, \r\n          bottom: 20, \r\n          right: 20, \r\n          backgroundColor: \"#a9e1fa\", \r\n          borderRadius: 50, \r\n          boxShadow: \"0 6px 10px 0 #666\", \r\n          transition: \"all 0.1s ease-in-out\",\r\n          textAlign: \"center\"\r\n        }}\r\n        onClick={() => {\r\n          props.onClick();\r\n          setToastShow(true);\r\n          setTimeout(() => {\r\n            setToastShow(false);\r\n          }, 1000);\r\n        }}\r\n      >\r\n        <IoMdCopy size={28} style={{height: 50}} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FixedButton;","import React from 'react';\r\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  show: boolean \r\n  clickedIndex: number\r\n  onHideButtonClick: () => void\r\n  onRemoveButtonClick: () => void\r\n}\r\n\r\nconst Modal = (props: Props) => {\r\n  return (\r\n    <BootstrapModal show={props.show} onHide={props.onHideButtonClick} animation={false}>\r\n      <BootstrapModal.Header closeButton>\r\n        <BootstrapModal.Title>데이터 삭제</BootstrapModal.Title>\r\n      </BootstrapModal.Header>\r\n      <BootstrapModal.Body>{(props.clickedIndex)+1}번 데이터를 삭제하시겠습니까</BootstrapModal.Body>\r\n      <BootstrapModal.Footer>\r\n        <Button variant=\"light\" onClick={props.onHideButtonClick}>취소</Button>\r\n        <Button variant=\"danger\" onClick={props.onRemoveButtonClick}>삭제</Button>\r\n      </BootstrapModal.Footer>\r\n    </BootstrapModal>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Button, Nav, Navbar } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  onFormLinkClick: () => void\r\n  onDataLInkClick: () => void\r\n  onExportButtonClick: () => void\r\n}\r\n\r\nconst Navigation = (props: Props) => {\r\n  return (\r\n    <Navbar bg=\"light\">\r\n      <Navbar.Brand href=\"#\">공디비</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#form\" onClick={props.onFormLinkClick}>Form</Nav.Link>\r\n        <Nav.Link href=\"#table\" onClick={props.onDataLInkClick}>Table</Nav.Link>\r\n      </Nav>\r\n      <Button \r\n        variant=\"outline-info\" \r\n        onClick={props.onExportButtonClick}\r\n      >\r\n        데이터 다운로드\r\n      </Button>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./pill-checkbox.css\";\r\n\r\ninterface Props {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nconst accentColor = \"#14a4be\";\r\nconst secondaryColor = \"#ffffff\";\r\n\r\nconst PillCheckbox = (props: Props) => {\r\n  const [isChecked, setChecked] = useState<boolean>(false);\r\n  const [isFocused, setFocused] = useState<boolean>(false);\r\n\r\n  return (\r\n    <label \r\n      className=\"pill-checkbox\" \r\n      style={{\r\n        backgroundColor: isChecked ? accentColor : secondaryColor,\r\n        borderColor: isFocused ? accentColor : \"#e0e0e0\"\r\n      }}\r\n    >\r\n      <Form.Check \r\n        name={props.name}\r\n        type=\"checkbox\" \r\n        className=\"position-absolute\" \r\n        value={props.label}\r\n        checked={isChecked}\r\n        onChange={() => setChecked(!isChecked)}\r\n        onBlur={() => setFocused(false)}\r\n        onFocus={() => setFocused(true)}\r\n        onKeyPress={(event: React.KeyboardEvent<HTMLInputElement>) => {\r\n          if (event.key === \"Enter\") {\r\n            setChecked(!isChecked);\r\n          }\r\n        }}\r\n      />\r\n      <span className={`pill-label ${isChecked ? \"checked\" : \"\"} ${isFocused ? \"focused\" : \"\"}`}>{props.label}</span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default PillCheckbox;","import React from 'react';\r\n\r\ninterface Props {\r\n  title: string\r\n}\r\n\r\nconst FormDivider = (props: Props) => {\r\n  return (\r\n    <p style={{fontSize: 24, borderBottom: \"solid 1px #e5e5e5\"}}>\r\n      {props.title}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default FormDivider;","export const ncs = [\r\n  \"의사소통능력\",\r\n  \"문제해결능력\",\r\n  \"대인관계능력\",\r\n  \"자원관리능력\",\r\n  \"직업윤리\",\r\n  \"정보능력\",\r\n  \"수리능력\",\r\n  \"직무수행능력\",\r\n  \"전공능력\",\r\n];\r\n\r\nexport const getGongdbInputData = (): GongdbInputData => {\r\n  let value = {} as GongdbInputData;\r\n\r\n  document.querySelectorAll(\".form-control\").forEach((element) => {\r\n    const name = element.attributes.getNamedItem(\"name\")?.value as string;\r\n    const inputValue = (element as HTMLInputElement).value;\r\n    if (name in value) {\r\n      if (Array.isArray(value[name])) {\r\n        value = {...value, [name]: [...value[name] as string[], inputValue]};\r\n      }\r\n      else {\r\n        value = {...value, [name]: [value[name] as string, inputValue]};\r\n      }\r\n    }\r\n    else {\r\n      value = {...value, [name]: inputValue};\r\n    }\r\n  });\r\n  \r\n  document.querySelectorAll(\".form-check-input\").forEach((element) => {\r\n    const name = element.attributes.getNamedItem(\"name\")?.value as string;\r\n    const isChecked = (element as HTMLInputElement).checked;\r\n    if (name in value) {\r\n      if (Array.isArray(value[name])) {\r\n        value = {...value, [name]: [...value[name] as boolean[], isChecked]};\r\n      }\r\n      else {\r\n        value = {...value, [name]: [value[name] as boolean, isChecked]};\r\n      }\r\n    }\r\n    else {\r\n      value = {...value, [name]: isChecked};\r\n    }\r\n  });\r\n\r\n  value.ncs = value.ncs.map((isChecked: boolean, index: number) => isChecked ? ncs[index] : null).filter((each: (string|null)) => each).join(\",\");\r\n\r\n  return value;\r\n};\r\n\r\nexport const clearForm = (): void => {\r\n  document.querySelectorAll(\".erasable\").forEach((element) => {\r\n    (element as HTMLInputElement).value = \"\";\r\n  });\r\n\r\n  document.querySelectorAll(\".form-check-input\").forEach((element) => {\r\n    const isChecked = (element as HTMLInputElement).checked;\r\n    if (isChecked) {\r\n      (element as HTMLInputElement).click();\r\n    }\r\n  });\r\n};\r\n\r\nexport const exportJSON = (object: any): void => {\r\n  var data = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(object));\r\n  \r\n  let a = document.createElement(\"a\");\r\n  a.href = \"data:\" + data;\r\n  a.download = \"data.json\";\r\n\r\n  a.click();\r\n  a.remove();\r\n};\r\n\r\nexport const saveJSON = (object: any): void => {\r\n  localStorage.setItem(\"gongdb-input\", JSON.stringify(object));\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Alert from './component/Alert';\r\nimport DataTable from './component/DataTable';\r\nimport FixedButton from './component/FixedButton';\r\nimport Modal from './component/Modal';\r\nimport Navigation from './component/Navigation';\r\nimport PillCheckbox from './component/PillCheckbox';\r\nimport FormDivider from './component/FormDivider';\r\nimport { ncs, getGongdbInputData, clearForm, saveJSON, exportJSON } from './utils';\r\nimport \"./App.css\";\r\n\r\ntype Mode = \"FORM\" | \"DATA\";\r\n\r\nfunction App() {\r\n  const [gongdbInputData, setGongdbInputData] = useState<GongdbInputData[]>([]);\r\n  const [clickedIndex, setClickedIndex] = useState<number>();\r\n  const [toastShow, setToastShow] = useState<boolean>(false);\r\n  const [modalShow, setModalShow] = useState<boolean>(false);\r\n  const [isCertReadOnly, setIsCertReadOnly] = useState<boolean>(true);\r\n  const [isDepartmentReadOnly, setIsDepartmentReadOnly] = useState<boolean>(true);\r\n  const [mode, setMode] = useState<Mode>(\"FORM\");\r\n\r\n  const recruitTypeElement = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isCertReadOnly || isDepartmentReadOnly) {\r\n      (document.getElementsByName(\"isEither\")[0] as HTMLInputElement).checked = false;\r\n    }\r\n  }, [isCertReadOnly, isDepartmentReadOnly])\r\n\r\n  useEffect(() => {\r\n    if (isCertReadOnly) {\r\n      (document.getElementsByName(\"certificates\")[0] as HTMLInputElement).value = \"\";\r\n    }\r\n  }, [isCertReadOnly])\r\n\r\n  useEffect(() => {\r\n    if (isDepartmentReadOnly) {\r\n      (document.getElementsByName(\"departments\")[0] as HTMLInputElement).value = \"\";\r\n    }\r\n  }, [isDepartmentReadOnly])\r\n\r\n  const focusOnFirst = (): void => {\r\n    recruitTypeElement?.current?.focus();\r\n  };\r\n\r\n  const toastAlert = (): void => {\r\n    setToastShow(true);\r\n    setTimeout(() => {\r\n      setToastShow(false);\r\n    }, 1000);\r\n  };\r\n  \r\n  const setReadOnly = (): void => {\r\n    setIsCertReadOnly(true);\r\n    setIsDepartmentReadOnly(true);\r\n  };\r\n\r\n  const handleInputClick = (): void => {\r\n    const data = [...gongdbInputData, getGongdbInputData()];\r\n    setGongdbInputData(data);\r\n    clearForm();\r\n    focusOnFirst();\r\n    toastAlert();\r\n    setReadOnly();\r\n    saveJSON(data);\r\n  };\r\n\r\n  const removeGongdbInputData = (removeIndex: number): void => {\r\n    setGongdbInputData(gongdbInputData.filter((_, index) => index !== removeIndex));\r\n  };\r\n\r\n  const loadDataToForm = (data: GongdbInputData) => {\r\n    (document.getElementsByName(\"companyName\")[0] as HTMLInputElement).value = data.companyName;\r\n    (document.getElementsByName(\"announcementTimestamp\")[0] as HTMLInputElement).value = data.announcementTimestamp;\r\n    (document.getElementsByName(\"sequence\")[0] as HTMLInputElement).value = data.sequence;\r\n    (document.getElementsByName(\"link\")[0] as HTMLInputElement).value = data.link;\r\n    (document.getElementsByName(\"languageScore\")[0] as HTMLInputElement).value = data.languageScore;\r\n    (document.getElementsByName(\"perfectLanguageScore\")[0] as HTMLInputElement).value = data.perfectLanguageScore;\r\n\r\n    (document.getElementsByName(\"workingType\")[0] as HTMLInputElement).value = data.workingType;\r\n    (document.getElementsByName(\"position\")[0] as HTMLInputElement).value = data.position;\r\n    (document.getElementsByName(\"recruitLevel\")[0] as HTMLInputElement).value = data.recruitLevel;\r\n    (document.getElementsByName(\"rank\")[0] as HTMLInputElement).value = data.rank;\r\n\r\n    (document.getElementsByName(\"recruitType\")[0] as HTMLInputElement).value = data.recruitType;\r\n    (document.getElementsByName(\"districts\")[0] as HTMLInputElement).value = data.districts;\r\n    (document.getElementsByName(\"subjects\")[0] as HTMLInputElement).value = data.subjects;\r\n\r\n    if (data.certificates) {\r\n      setIsCertReadOnly(false);\r\n    }\r\n    (document.getElementsByName(\"certificates\")[0] as HTMLInputElement).value = data.certificates;\r\n    if (data.departments) {\r\n      setIsDepartmentReadOnly(false);\r\n    }\r\n    (document.getElementsByName(\"departments\")[0] as HTMLInputElement).value = data.departments;\r\n\r\n    (document.getElementsByName(\"isEither\")[0] as HTMLInputElement).checked = data.isEither;\r\n\r\n    document.getElementsByName(\"ncs\").forEach((element) => {\r\n      if (data.ncs.includes((element as HTMLInputElement).value) && !(element as HTMLInputElement).checked) {\r\n        element.click();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation \r\n        onFormLinkClick={() => setMode(\"FORM\")}\r\n        onDataLInkClick={() => setMode(\"DATA\")}\r\n        onExportButtonClick={() => exportJSON(gongdbInputData)} \r\n      />\r\n      <Container fluid>\r\n        <Alert show={toastShow} title=\"정상적으로 입력되었습니다!\" />\r\n\r\n        <Modal \r\n          show={modalShow}\r\n          clickedIndex={clickedIndex as number}\r\n          onHideButtonClick={() => setModalShow(false)}\r\n          onRemoveButtonClick={() => {\r\n            removeGongdbInputData(clickedIndex as number);\r\n            setModalShow(false);\r\n          }}\r\n        />\r\n\r\n        {\r\n          mode === \"FORM\"\r\n          ? <Form id=\"input-form\">\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <FormDivider title=\"회사정보\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>회사명</Form.Label>\r\n                  <Form.Control name=\"companyName\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>차수</Form.Label>\r\n                  <Form.Control name=\"sequence\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>접수일자</Form.Label>\r\n                  <Form.Control type=\"date\" name=\"announcementTimestamp\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>지원가능 어학성적</Form.Label>\r\n                  <Form.Control name=\"languageScore\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>어학성적 만점기준</Form.Label>\r\n                  <Form.Control name=\"perfectLanguageScore\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-5\">\r\n                <Col xs={12}>\r\n                  <FormDivider title=\"채용정보\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>근무형태</Form.Label>\r\n                  <Form.Control name=\"workingType\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>직군</Form.Label>\r\n                  <Form.Control name=\"position\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>채용수준</Form.Label>\r\n                  <Form.Control name=\"recruitLevel\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>직급</Form.Label>\r\n                  <Form.Control name=\"rank\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-5\">\r\n                <Col xs={12}>\r\n                  <FormDivider title=\"채용상세\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>채용구분</Form.Label>\r\n                  <Form.Control name=\"recruitType\" className=\"erasable\" autoComplete=\"off\" ref={recruitTypeElement} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>지역</Form.Label>\r\n                  <Form.Control name=\"districts\" className=\"erasable\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>과목</Form.Label>\r\n                  <Form.Control name=\"subjects\" className=\"erasable\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>지원가능 자격증</Form.Label>\r\n                  <Form.Control \r\n                    name=\"certificates\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\" \r\n                    readOnly={isCertReadOnly}\r\n                    tabIndex={isCertReadOnly ? -1 : undefined}\r\n                    placeholder={isCertReadOnly ? \"활성화하려면 더블클릭\" : undefined}\r\n                    onDoubleClick={() => setIsCertReadOnly(!isCertReadOnly)}\r\n                    onFocus={(event: React.FocusEvent<HTMLInputElement>) => event.target.style.height = \"250px\"}\r\n                    onBlur={(event: React.FocusEvent<HTMLInputElement>) => event.target.style.height = \"\"}\r\n                    style={{transition: \"height 0.5s\"}}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>지원가능 학과</Form.Label>\r\n                  <Form.Control \r\n                    name=\"departments\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\" \r\n                    readOnly={isDepartmentReadOnly}\r\n                    tabIndex={isDepartmentReadOnly ? -1 : undefined}\r\n                    placeholder={isDepartmentReadOnly ? \"활성화하려면 더블클릭\" : undefined}\r\n                    onDoubleClick={() => setIsDepartmentReadOnly(!isDepartmentReadOnly)}\r\n                    onFocus={(event: React.FocusEvent<HTMLInputElement>) => event.target.style.height = \"250px\"}\r\n                    onBlur={(event: React.FocusEvent<HTMLInputElement>) => event.target.style.height = \"\"}\r\n                    style={{transition: \"height 0.5s\"}}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} className=\"mt-3 text-right\">\r\n                  <Form.Check \r\n                    inline \r\n                    style={{display: !isCertReadOnly && !isDepartmentReadOnly ? \"unset\" : \"none\"}}\r\n                    type=\"checkbox\" \r\n                    name=\"isEither\"\r\n                    label=\"둘 중 하나만 만족하면 돼요\" \r\n                    onKeyPress={(event: React.KeyboardEvent<HTMLInputElement>) => {\r\n                      if (event.key === \"Enter\") {\r\n                        event.currentTarget.checked = !event.currentTarget.checked\r\n                      }\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} className=\"my-4 text-center\">\r\n                  {\r\n                    ncs.map((value, index) => (\r\n                      <PillCheckbox \r\n                        name=\"ncs\"\r\n                        label={value}\r\n                        key={index}\r\n                      />\r\n                    ))\r\n                  }\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-5\">\r\n                <Col xs={12}>\r\n                  <Button \r\n                    block\r\n                    variant=\"info\" \r\n                    onClick={handleInputClick}\r\n                  >\r\n                    입력\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          : gongdbInputData.length > 0 \r\n            ? <DataTable \r\n                data={gongdbInputData} \r\n                onRowClick={(index) => {\r\n                  setClickedIndex(index);\r\n                  setModalShow(true);\r\n                }}\r\n              /> \r\n            : <span style={{textAlign: \"center\", display: \"block\", paddingTop: 30, fontSize: 20}}>입력된 데이터가 없어요!</span>\r\n        }\r\n\r\n        {\r\n          mode === \"FORM\" \r\n           ? <FixedButton onClick={() => gongdbInputData.length ? loadDataToForm(gongdbInputData.slice(-1)[0]) : {}} />\r\n           : null\r\n        }\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}