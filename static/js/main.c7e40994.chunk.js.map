{"version":3,"sources":["component/Alert/index.tsx","component/DataTable/index.tsx","component/FixedButton/index.tsx","component/Modal/index.tsx","component/Navigation/index.tsx","component/PillCheckbox/index.tsx","component/FormDivider/index.tsx","utils/index.ts","App.tsx","serviceWorker.js","index.js"],"names":["Alert","props","variant","show","style","position","top","right","zIndex","title","ellipsis","textOverflow","overflow","whiteSpace","DataTable","Table","striped","bordered","hover","className","data","map","value","index","key","data-key","onClick","onRowClick","onDoubleClick","onRowDoubleClick","maxWidth","companyName","announcementTimestamp","sequence","languageScore","perfectLanguageScore","link","workingType","recruitType","districts","recruitLevel","rank","subjects","certificates","departments","annnouncementEtc","String","ncs","isEither","memo","reverse","FixedButton","useState","toastShow","setToastShow","width","height","bottom","backgroundColor","borderRadius","boxShadow","transition","textAlign","setTimeout","size","Modal","onHide","onHideButtonClick","animation","Header","closeButton","Title","Body","body","Footer","Button","actionButtonVariant","onActionButtonClick","actionButtonName","Navigation","Navbar","bg","Brand","href","Nav","Link","onFormLinkClick","onDataLInkClick","onExportButtonClick","PillCheckbox","isChecked","setChecked","isFocused","setFocused","borderColor","Form","Check","name","type","label","checked","onChange","onBlur","onFocus","onKeyPress","event","FormDivider","fontSize","borderBottom","getGongdbInputData","document","querySelectorAll","forEach","element","attributes","getNamedItem","inputValue","Array","isArray","filter","each","join","App","gongdbInputData","setGongdbInputData","clickedIndex","setClickedIndex","modalShow","setModalShow","copyModalShow","setCopyModalShow","isCertReadOnly","setIsCertReadOnly","isDepartmentReadOnly","setIsDepartmentReadOnly","isAnnouncementEtcReadOnly","setIsAnnouncementEtcReadOnly","isMemoReadOnly","setIsMemoReadOnly","mode","setMode","recruitTypeElement","useRef","useEffect","getElementsByName","loadDataToForm","includes","click","object","encodeURIComponent","JSON","stringify","a","createElement","download","remove","exportJSON","Container","fluid","removeIndex","_","id","Row","Col","xs","Label","Control","autoComplete","ref","as","readOnly","tabIndex","undefined","placeholder","inline","display","currentTarget","block","current","focus","focusOnFirst","localStorage","setItem","length","paddingTop","slice","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7e40994.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert as BootstrapAlert } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  show: boolean\r\n  title: string\r\n  variant?: string\r\n}\r\n\r\nconst Alert = (props: Props) => {\r\n  return (\r\n    <BootstrapAlert\r\n      variant={props.variant ? props.variant : \"success\"}\r\n      show={props.show} \r\n      style={{position: \"fixed\", top: 15, right: 15, zIndex: 999}}\r\n    >\r\n      {props.title}\r\n    </BootstrapAlert>\r\n  );\r\n};\r\n\r\nexport default Alert;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  data: GongdbInputData[]\r\n  onRowClick: (index: number) => void\r\n  onRowDoubleClick: (index: number) => void\r\n}\r\n\r\nconst ellipsis = {\r\n  textOverflow: \"ellipsis\" as const,\r\n  overflow: \"hidden\" as const,\r\n  whiteSpace: \"nowrap\" as const,\r\n};\r\n\r\nconst DataTable = (props: Props) => {\r\n  return (\r\n    <Table striped bordered hover className=\"mt-3\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>회사명</th>\r\n          <th>공고연도</th>\r\n          <th>차수</th>\r\n          <th>어학</th>\r\n          <th>어학만점</th>\r\n          <th>링크</th>\r\n          <th>직군</th>\r\n          <th>근무형태</th>\r\n          <th>채용구분</th>\r\n          <th>지역</th>\r\n          <th>채용수준</th>\r\n          <th>직급</th>\r\n          <th>과목</th>\r\n          <th>자격증</th>\r\n          <th>학과</th>\r\n          <th>공고별 기타사항</th>\r\n          <th>NCS</th>\r\n          <th>둘중하나</th>\r\n          <th>메모</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.data.map((value, index) => (\r\n            <tr \r\n              key={index} \r\n              data-key={index} \r\n            >\r\n              <td \r\n                onClick={() => props.onRowClick(index)}\r\n              >\r\n                {index+1}\r\n              </td>\r\n              <td \r\n                onDoubleClick={() => props.onRowDoubleClick(index)}\r\n                style={{maxWidth: 200, ...ellipsis}}\r\n              >\r\n                {value.companyName}\r\n              </td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.announcementTimestamp}</td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.sequence}</td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.languageScore}</td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.perfectLanguageScore}</td>\r\n              <td style={{maxWidth: 150, ...ellipsis}}>{value.link}</td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.position}</td>\r\n              <td style={{maxWidth: 150, ...ellipsis}}>{value.workingType}</td>\r\n              <td style={{maxWidth: 150, ...ellipsis}}>{value.recruitType}</td>\r\n              <td style={{maxWidth: 300, ...ellipsis}}>{value.districts}</td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.recruitLevel}</td>\r\n              <td style={{maxWidth: 100, ...ellipsis}}>{value.rank}</td>\r\n              <td style={{maxWidth: 400, ...ellipsis}}>{value.subjects}</td>\r\n              <td style={{maxWidth: 400, ...ellipsis}}>{value.certificates}</td>\r\n              <td style={{maxWidth: 400, ...ellipsis}}>{value.departments}</td>\r\n              <td style={{maxWidth: 300, ...ellipsis}}>{value.annnouncementEtc}</td>\r\n              <td style={{maxWidth: 400, ...ellipsis}}>{String(value.ncs)}</td>\r\n              <td style={{maxWidth: 50, ...ellipsis}}>{typeof value.isEither === \"boolean\" ? String(value.isEither) : \"\"}</td>\r\n              <td style={{maxWidth: 200, ...ellipsis}}>{value.memo}</td>\r\n            </tr>\r\n          )).reverse()\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default DataTable;","import React, { useState } from 'react';\r\nimport { IoMdCopy } from \"react-icons/io\";\r\nimport Alert from '../Alert';\r\n\r\ninterface Props {\r\n  onClick: () => void\r\n  onDoubleClick: () => void\r\n}\r\n\r\nconst FixedButton = (props: Props) => {\r\n  const [toastShow, setToastShow] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n    <Alert show={toastShow} title=\"정상적으로 복사되었습니다!\" />\r\n      <div \r\n        style={{\r\n          position: \"fixed\", \r\n          width: 50, \r\n          height: 50, \r\n          bottom: 20, \r\n          right: 20, \r\n          backgroundColor: \"#a9e1fa\", \r\n          borderRadius: 50, \r\n          boxShadow: \"0 6px 10px 0 #666\", \r\n          transition: \"all 0.1s ease-in-out\",\r\n          textAlign: \"center\"\r\n        }}\r\n        onClick={() => {\r\n          props.onClick();\r\n          setToastShow(true);\r\n          setTimeout(() => {\r\n            setToastShow(false);\r\n          }, 1000);\r\n        }}\r\n        onDoubleClick={() => {\r\n          props.onDoubleClick();\r\n          setToastShow(true);\r\n          setTimeout(() => {\r\n            setToastShow(false);\r\n          }, 1000);\r\n        }}\r\n      >\r\n        <IoMdCopy size={28} style={{height: 50}} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FixedButton;","import React from 'react';\r\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  show: boolean \r\n  onHideButtonClick: () => void\r\n  onActionButtonClick: () => void\r\n  title: string\r\n  body: string\r\n  actionButtonName: string\r\n  actionButtonVariant?: string\r\n}\r\n\r\nconst Modal = (props: Props) => {\r\n  return (\r\n    <BootstrapModal show={props.show} onHide={props.onHideButtonClick} animation={false}>\r\n      <BootstrapModal.Header closeButton>\r\n        <BootstrapModal.Title>{props.title}</BootstrapModal.Title>\r\n      </BootstrapModal.Header>\r\n      <BootstrapModal.Body>{props.body}</BootstrapModal.Body>\r\n      <BootstrapModal.Footer>\r\n        <Button variant=\"light\" onClick={props.onHideButtonClick}>취소</Button>\r\n        <Button variant={props.actionButtonVariant ? props.actionButtonVariant : \"primary\"} onClick={props.onActionButtonClick}>{props.actionButtonName}</Button>\r\n      </BootstrapModal.Footer>\r\n    </BootstrapModal>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Button, Nav, Navbar } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  onFormLinkClick: () => void\r\n  onDataLInkClick: () => void\r\n  onExportButtonClick: () => void\r\n}\r\n\r\nconst Navigation = (props: Props) => {\r\n  return (\r\n    <Navbar bg=\"light\">\r\n      <Navbar.Brand href=\"#\">공디비</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#form\" onClick={props.onFormLinkClick}>Form</Nav.Link>\r\n        <Nav.Link href=\"#table\" onClick={props.onDataLInkClick}>Table</Nav.Link>\r\n      </Nav>\r\n      <Button \r\n        variant=\"outline-info\" \r\n        onClick={props.onExportButtonClick}\r\n      >\r\n        데이터 다운로드\r\n      </Button>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./pill-checkbox.css\";\r\n\r\ninterface Props {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nconst accentColor = \"#14a4be\";\r\nconst secondaryColor = \"#ffffff\";\r\n\r\nconst PillCheckbox = (props: Props) => {\r\n  const [isChecked, setChecked] = useState<boolean>(false);\r\n  const [isFocused, setFocused] = useState<boolean>(false);\r\n\r\n  return (\r\n    <label \r\n      className=\"pill-checkbox\" \r\n      style={{\r\n        backgroundColor: isChecked ? accentColor : secondaryColor,\r\n        borderColor: isFocused ? accentColor : \"#e0e0e0\"\r\n      }}\r\n    >\r\n      <Form.Check \r\n        name={props.name}\r\n        type=\"checkbox\" \r\n        className=\"position-absolute\" \r\n        value={props.label}\r\n        checked={isChecked}\r\n        onChange={() => setChecked(!isChecked)}\r\n        onBlur={() => setFocused(false)}\r\n        onFocus={() => setFocused(true)}\r\n        onKeyPress={(event: React.KeyboardEvent<HTMLInputElement>) => {\r\n          if (event.key === \"Enter\") {\r\n            setChecked(!isChecked);\r\n          }\r\n        }}\r\n      />\r\n      <span className={`pill-label ${isChecked ? \"checked\" : \"\"} ${isFocused ? \"focused\" : \"\"}`}>{props.label}</span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default PillCheckbox;","import React from 'react';\r\n\r\ninterface Props {\r\n  title: string\r\n}\r\n\r\nconst FormDivider = (props: Props) => {\r\n  return (\r\n    <p style={{fontSize: 24, borderBottom: \"solid 1px #e5e5e5\"}}>\r\n      {props.title}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default FormDivider;","export const ncs = [\r\n  \"의사소통능력\",\r\n  \"문제해결능력\",\r\n  \"대인관계능력\",\r\n  \"자원관리능력\",\r\n  \"직업윤리\",\r\n  \"정보능력\",\r\n  \"수리능력\",\r\n  \"직무수행능력\",\r\n  \"전공능력\",\r\n  \"기술능력\",\r\n];\r\n\r\nexport const getGongdbInputData = (): GongdbInputData => {\r\n  let value = {} as GongdbInputData;\r\n\r\n  document.querySelectorAll(\".form-control\").forEach((element) => {\r\n    const name = element.attributes.getNamedItem(\"name\")?.value as string;\r\n    const inputValue = (element as HTMLInputElement).value;\r\n    if (name in value) {\r\n      if (Array.isArray(value[name])) {\r\n        value = {...value, [name]: [...value[name] as string[], inputValue]};\r\n      }\r\n      else {\r\n        value = {...value, [name]: [value[name] as string, inputValue]};\r\n      }\r\n    }\r\n    else {\r\n      value = {...value, [name]: inputValue};\r\n    }\r\n  });\r\n  \r\n  document.querySelectorAll(\".form-check-input\").forEach((element) => {\r\n    const name = element.attributes.getNamedItem(\"name\")?.value as string;\r\n    const isChecked = (element as HTMLInputElement).checked;\r\n    if (name in value) {\r\n      if (Array.isArray(value[name])) {\r\n        value = {...value, [name]: [...value[name] as boolean[], isChecked]};\r\n      }\r\n      else {\r\n        value = {...value, [name]: [value[name] as boolean, isChecked]};\r\n      }\r\n    }\r\n    else {\r\n      value = {...value, [name]: isChecked};\r\n    }\r\n  });\r\n\r\n  value.ncs = value.ncs.map((isChecked: boolean, index: number) => isChecked ? ncs[index] : null).filter((each: (string|null)) => each).join(\",\");\r\n\r\n  return value;\r\n};\r\n\r\nexport const clearForm = (): void => {\r\n  document.querySelectorAll(\".erasable\").forEach((element) => {\r\n    (element as HTMLInputElement).value = \"\";\r\n  });\r\n\r\n  document.querySelectorAll(\".form-check-input\").forEach((element) => {\r\n    const isChecked = (element as HTMLInputElement).checked;\r\n    if (isChecked) {\r\n      (element as HTMLInputElement).click();\r\n    }\r\n  });\r\n};\r\n\r\nexport const exportJSON = (object: any): void => {\r\n  var data = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(object));\r\n  \r\n  let a = document.createElement(\"a\");\r\n  a.href = \"data:\" + data;\r\n  a.download = \"data.json\";\r\n\r\n  a.click();\r\n  a.remove();\r\n};\r\n\r\nexport const saveJSON = (object: any): void => {\r\n  localStorage.setItem(\"gongdb-input\", JSON.stringify(object));\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Alert from './component/Alert';\r\nimport DataTable from './component/DataTable';\r\nimport FixedButton from './component/FixedButton';\r\nimport Modal from './component/Modal';\r\nimport Navigation from './component/Navigation';\r\nimport PillCheckbox from './component/PillCheckbox';\r\nimport FormDivider from './component/FormDivider';\r\nimport { ncs, getGongdbInputData, clearForm, saveJSON, exportJSON } from './utils';\r\nimport \"./App.css\";\r\n\r\ntype Mode = \"FORM\" | \"DATA\";\r\n\r\nfunction App() {\r\n  const [gongdbInputData, setGongdbInputData] = useState<GongdbInputData[]>([]);\r\n  const [clickedIndex, setClickedIndex] = useState<number>();\r\n  const [toastShow, setToastShow] = useState<boolean>(false);\r\n  const [modalShow, setModalShow] = useState<boolean>(false);\r\n  const [copyModalShow, setCopyModalShow] = useState<boolean>(false);\r\n  const [isCertReadOnly, setIsCertReadOnly] = useState<boolean>(true);\r\n  const [isDepartmentReadOnly, setIsDepartmentReadOnly] = useState<boolean>(true);\r\n  const [isAnnouncementEtcReadOnly, setIsAnnouncementEtcReadOnly] = useState<boolean>(true);\r\n  const [isMemoReadOnly, setIsMemoReadOnly] = useState<boolean>(true);\r\n  const [mode, setMode] = useState<Mode>(\"FORM\");\r\n\r\n  const recruitTypeElement = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isCertReadOnly || isDepartmentReadOnly) {\r\n      (document.getElementsByName(\"isEither\")[0] as HTMLInputElement).checked = false;\r\n    }\r\n  }, [isCertReadOnly, isDepartmentReadOnly])\r\n\r\n  useEffect(() => {\r\n    if (isCertReadOnly) {\r\n      (document.getElementsByName(\"certificates\")[0] as HTMLInputElement).value = \"\";\r\n    }\r\n  }, [isCertReadOnly])\r\n\r\n  useEffect(() => {\r\n    if (isDepartmentReadOnly) {\r\n      (document.getElementsByName(\"departments\")[0] as HTMLInputElement).value = \"\";\r\n    }\r\n  }, [isDepartmentReadOnly])\r\n\r\n  const focusOnFirst = (): void => {\r\n    recruitTypeElement?.current?.focus();\r\n  };\r\n\r\n  const toastAlert = (): void => {\r\n    setToastShow(true);\r\n    setTimeout(() => {\r\n      setToastShow(false);\r\n    }, 1000);\r\n  };\r\n  \r\n  const setReadOnly = (): void => {\r\n    setIsCertReadOnly(true);\r\n    setIsDepartmentReadOnly(true);\r\n  };\r\n\r\n  const handleInputClick = (): void => {\r\n    const data = [...gongdbInputData, getGongdbInputData()];\r\n    setGongdbInputData(data);\r\n    clearForm();\r\n    focusOnFirst();\r\n    toastAlert();\r\n    setReadOnly();\r\n    saveJSON(data);\r\n  };\r\n\r\n  const removeGongdbInputData = (removeIndex: number): void => {\r\n    setGongdbInputData(gongdbInputData.filter((_, index) => index !== removeIndex));\r\n  };\r\n\r\n  const loadDataToForm = (data: GongdbInputData) => {\r\n    (document.getElementsByName(\"companyName\")[0] as HTMLInputElement).value = data.companyName;\r\n    (document.getElementsByName(\"announcementTimestamp\")[0] as HTMLInputElement).value = data.announcementTimestamp;\r\n    (document.getElementsByName(\"sequence\")[0] as HTMLInputElement).value = data.sequence;\r\n    (document.getElementsByName(\"link\")[0] as HTMLInputElement).value = data.link;\r\n    (document.getElementsByName(\"languageScore\")[0] as HTMLInputElement).value = data.languageScore;\r\n    (document.getElementsByName(\"perfectLanguageScore\")[0] as HTMLInputElement).value = data.perfectLanguageScore;\r\n\r\n    (document.getElementsByName(\"workingType\")[0] as HTMLInputElement).value = data.workingType;\r\n    (document.getElementsByName(\"position\")[0] as HTMLInputElement).value = data.position;\r\n    (document.getElementsByName(\"recruitLevel\")[0] as HTMLInputElement).value = data.recruitLevel;\r\n    (document.getElementsByName(\"rank\")[0] as HTMLInputElement).value = data.rank;\r\n\r\n    (document.getElementsByName(\"recruitType\")[0] as HTMLInputElement).value = data.recruitType;\r\n    (document.getElementsByName(\"districts\")[0] as HTMLInputElement).value = data.districts;\r\n    (document.getElementsByName(\"subjects\")[0] as HTMLInputElement).value = data.subjects;\r\n\r\n    if (data.certificates) {\r\n      setIsCertReadOnly(false);\r\n    }\r\n    (document.getElementsByName(\"certificates\")[0] as HTMLInputElement).value = data.certificates;\r\n    if (data.departments) {\r\n      setIsDepartmentReadOnly(false);\r\n    }\r\n    (document.getElementsByName(\"departments\")[0] as HTMLInputElement).value = data.departments;\r\n\r\n    (document.getElementsByName(\"isEither\")[0] as HTMLInputElement).checked = data.isEither;\r\n\r\n    document.getElementsByName(\"ncs\").forEach((element) => {\r\n      if (data.ncs.includes((element as HTMLInputElement).value) && !(element as HTMLInputElement).checked) {\r\n        element.click();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation \r\n        onFormLinkClick={() => setMode(\"FORM\")}\r\n        onDataLInkClick={() => setMode(\"DATA\")}\r\n        onExportButtonClick={() => exportJSON(gongdbInputData)} \r\n      />\r\n      <Container fluid>\r\n        <Alert show={toastShow} title=\"정상적으로 입력되었습니다!\" />\r\n\r\n        <Modal \r\n          show={modalShow}\r\n          onHideButtonClick={() => setModalShow(false)}\r\n          onActionButtonClick={() => {\r\n            removeGongdbInputData(clickedIndex as number);\r\n            setModalShow(false);\r\n          }}\r\n          title=\"데이터삭제\"\r\n          body={`${(clickedIndex as number)+1}번 데이터를 삭제하시겠습니까?`}\r\n          actionButtonName=\"삭제\"\r\n          actionButtonVariant=\"danger\"\r\n        />\r\n\r\n        <Modal \r\n          show={copyModalShow}\r\n          onHideButtonClick={() => setCopyModalShow(false)}\r\n          onActionButtonClick={() => {\r\n            setMode(\"FORM\");\r\n            setTimeout(() => {\r\n              setCopyModalShow(false);\r\n              loadDataToForm(gongdbInputData[clickedIndex as number]);\r\n            }, 300);\r\n          }}\r\n          title=\"데이터불러오기\"\r\n          body={`${(clickedIndex as number)+1}번 데이터를 불러오시겠습니까?`}\r\n          actionButtonName=\"불러오기\"\r\n        />\r\n\r\n        {\r\n          mode === \"FORM\"\r\n          ? <Form id=\"input-form\">\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <FormDivider title=\"회사정보\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>회사명</Form.Label>\r\n                  <Form.Control name=\"companyName\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>차수</Form.Label>\r\n                  <Form.Control name=\"sequence\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>접수일자</Form.Label>\r\n                  <Form.Control type=\"date\" name=\"announcementTimestamp\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>지원가능 어학성적</Form.Label>\r\n                  <Form.Control name=\"languageScore\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>어학성적 만점기준</Form.Label>\r\n                  <Form.Control name=\"perfectLanguageScore\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>공고링크</Form.Label>\r\n                  <Form.Control name=\"link\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-5\">\r\n                <Col xs={12}>\r\n                  <FormDivider title=\"채용정보\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>근무형태</Form.Label>\r\n                  <Form.Control name=\"workingType\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>직군</Form.Label>\r\n                  <Form.Control name=\"position\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Label>채용수준</Form.Label>\r\n                  <Form.Control name=\"recruitLevel\" autoComplete=\"off\" />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Label>직급</Form.Label>\r\n                  <Form.Control name=\"rank\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-5\">\r\n                <Col xs={12}>\r\n                  <FormDivider title=\"채용상세\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>채용구분</Form.Label>\r\n                  <Form.Control name=\"recruitType\" className=\"erasable\" autoComplete=\"off\" ref={recruitTypeElement} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>지역</Form.Label>\r\n                  <Form.Control name=\"districts\" className=\"erasable\" autoComplete=\"off\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>과목</Form.Label>\r\n                  <Form.Control \r\n                    as=\"textarea\"\r\n                    name=\"subjects\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\"\r\n                    style={{height: 40}}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>지원가능 자격증</Form.Label>\r\n                  <Form.Control \r\n                    as=\"textarea\"\r\n                    name=\"certificates\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\" \r\n                    readOnly={isCertReadOnly}\r\n                    tabIndex={isCertReadOnly ? -1 : undefined}\r\n                    placeholder={isCertReadOnly ? \"활성화하려면 더블클릭\" : undefined}\r\n                    onDoubleClick={() => setIsCertReadOnly(!isCertReadOnly)}\r\n                    style={{\r\n                      textAlign: isCertReadOnly ? \"center\" : \"start\",\r\n                      height: isCertReadOnly ? 40 : \"\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>지원가능 학과</Form.Label>\r\n                  <Form.Control \r\n                    as=\"textarea\"\r\n                    name=\"departments\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\" \r\n                    readOnly={isDepartmentReadOnly}\r\n                    tabIndex={isDepartmentReadOnly ? -1 : undefined}\r\n                    placeholder={isDepartmentReadOnly ? \"활성화하려면 더블클릭\" : undefined}\r\n                    onDoubleClick={() => setIsDepartmentReadOnly(!isDepartmentReadOnly)}\r\n                    style={{\r\n                      textAlign: isDepartmentReadOnly ? \"center\" : \"start\",\r\n                      height: isDepartmentReadOnly ? 40 : \"\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Form.Label>공고별 기타사항</Form.Label>\r\n                  <Form.Control \r\n                    as=\"textarea\"\r\n                    name=\"announcementEtc\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\" \r\n                    readOnly={isAnnouncementEtcReadOnly}\r\n                    tabIndex={isAnnouncementEtcReadOnly ? -1 : undefined}\r\n                    placeholder={isAnnouncementEtcReadOnly ? \"활성화하려면 더블클릭\" : undefined}\r\n                    onDoubleClick={() => setIsAnnouncementEtcReadOnly(!isAnnouncementEtcReadOnly)}\r\n                    style={{\r\n                      textAlign: isAnnouncementEtcReadOnly ? \"center\" : \"start\",\r\n                      height: isAnnouncementEtcReadOnly ? 40 : \"\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} className=\"mt-3 text-right\">\r\n                  <Form.Check \r\n                    inline \r\n                    style={{display: !isCertReadOnly && !isDepartmentReadOnly ? \"unset\" : \"none\"}}\r\n                    type=\"checkbox\" \r\n                    name=\"isEither\"\r\n                    label=\"둘 중 하나만 만족하면 돼요\" \r\n                    onKeyPress={(event: React.KeyboardEvent<HTMLInputElement>) => {\r\n                      if (event.key === \"Enter\") {\r\n                        event.currentTarget.checked = !event.currentTarget.checked\r\n                      }\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} className=\"mt-3 text-right\">\r\n                  <Form.Control\r\n                    name=\"memo\" \r\n                    className=\"erasable\" \r\n                    autoComplete=\"off\" \r\n                    readOnly={isMemoReadOnly}\r\n                    tabIndex={isMemoReadOnly ? -1 : undefined}\r\n                    placeholder={isMemoReadOnly ? \"활성화하려면 더블클릭\" : undefined}\r\n                    onDoubleClick={() => setIsMemoReadOnly(!isMemoReadOnly)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} className=\"my-4 text-center\">\r\n                  {\r\n                    ncs.map((value, index) => (\r\n                      <PillCheckbox \r\n                        name=\"ncs\"\r\n                        label={value}\r\n                        key={index}\r\n                      />\r\n                    ))\r\n                  }\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-5\">\r\n                <Col xs={12}>\r\n                  <Button \r\n                    block\r\n                    variant=\"info\" \r\n                    onClick={handleInputClick}\r\n                  >\r\n                    입력\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          : gongdbInputData.length > 0 \r\n            ? <DataTable \r\n                data={gongdbInputData} \r\n                onRowClick={(index) => {\r\n                  setClickedIndex(index);\r\n                  setCopyModalShow(true);\r\n                }}\r\n                onRowDoubleClick={(index) => {\r\n                  setClickedIndex(index);\r\n                  setModalShow(true);\r\n                }}\r\n              /> \r\n            : <span style={{textAlign: \"center\", display: \"block\", paddingTop: 30, fontSize: 20}}>입력된 데이터가 없어요!</span>\r\n        }\r\n\r\n        {\r\n          mode === \"FORM\" \r\n           ? <FixedButton \r\n              onClick={() => gongdbInputData.length ? loadDataToForm(gongdbInputData.slice(-1)[0]) : {}}\r\n              onDoubleClick={() => {}}\r\n             />\r\n           : null\r\n        }\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}